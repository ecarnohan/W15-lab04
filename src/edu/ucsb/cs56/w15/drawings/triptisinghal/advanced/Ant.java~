package edu.ucsb.cs56.w15.drawings.triptisinghal.advanced;
import java.awt.geom.GeneralPath; // combinations of lines and curves
import java.awt.geom.AffineTransform; // translation, rotation, scale
import java.awt.Shape; // general class for shapes

// all imports below this line needed if you are implementing Shape
import java.awt.geom.Point2D; 
import java.awt.geom.Line2D; 
import java.awt.geom.Rectangle2D;
import java.awt.geom.Ellipse2D; //ellipses and circles
import java.awt.Rectangle;
import java.awt.geom.PathIterator;
import java.awt.geom.AffineTransform;

import edu.ucsb.cs56.w15.drawings.utilities.ShapeTransforms;
import edu.ucsb.cs56.w15.drawings.utilities.GeneralPathWrapper;

/**
   A vector drawing of an ant that implements
   the Shape interface, and so can be drawn, as well as
   rotated, scaled, etc.
      
   @author Phill Conrad 
   @version for CS56, Winter 11, UCSB
   
*/
public class Ant extends GeneralPathWrapper implements Shape
{
    /**
       Constructor

       @param x x coord of center of circle
       @param y y coord of center of circle
       @param r radius of circle
     */
    public Ant(double x, double y, double r){
    
        
        double bodyRadius = .75 * r;
        double firstBodyUpperXCoord = x + 2*r;
        double firstBodyUpperYCoord = y + .25*r;

	double secondBodyUpperXCoord = x + 2*r + 2 * .75 * r;
        double secondBodyUpperYCoord = y + .25*r;

	double thirdBodyUpperXCoord = x + 2*r + 4 * .75 * r;
        double thirdBodyUpperYCoord = y + .25*r;

        
        // make the ant's head
	Circle antHead = new Circle(x,y,r);
        
        // make the first body
        Circle antFirstBody = new Circle(firstBodyUpperXCoord,firstBodyUpperYCoord,bodyRadius);

	//make the second body
      	Circle antSecondBody = new Circle(secondBodyUpperXCoord,secondBodyUpperYCoord,bodyRadius);
	//make the third body
	Circle antThirdBody = new Circle(thirdBodyUpperXCoord,thirdBodyUpperYCoord,bodyRadius);
	//make the 6 legs
	Line2D.Double leg_1 = new Line2D.Double (firstBodyUpperXCoord + bodyRadius, firstBodyUpperYCoord + 2*bodyRadius, firstBodyUpperXCoord + bodyRadius - bodyRadius/4 , firstBodyUpperYCoord + 2*bodyRadius + bodyRadius/4);

	Line2D.Double leg_2 = new Line2D.Double (firstBodyUpperXCoord + bodyRadius, firstBodyUpperYCoord + 2*bodyRadius,firstBodyUpperXCoord + bodyRadius + bodyRadius/4,firstBodyUpperYCoord + 2*bodyRadius + bodyRadius/4);

	Line2D.Double leg_3 = new Line2D.Double (secondBodyUpperXCoord + bodyRadius, secondBodyUpperYCoord + 2*bodyRadius,secondBodyUpperXCoord + bodyRadius -bodyRadius/4,secondBodyUpperYCoord + 2*bodyRadius + bodyRadius/4);

	Line2D.Double leg_4 = new Line2D.Double (secondBodyUpperXCoord + bodyRadius, secondBodyUpperYCoord + 2*bodyRadius,secondBodyUpperXCoord + bodyRadius +bodyRadius/4,secondBodyUpperYCoord + 2*bodyRadius + bodyRadius/4);

	Line2D.Double leg_5 = new Line2D.Double (thirdBodyUpperXCoord + bodyRadius, thirdBodyUpperYCoord + 2*bodyRadius,thirdBodyUpperXCoord + bodyRadius -bodyRadius/4,thirdBodyUpperYCoord + 2*bodyRadius + bodyRadius/4);
	Line2D.Double leg_6 = new Line2D.Double (thirdBodyUpperXCoord + bodyRadius, thirdBodyUpperYCoord + 2*bodyRadius,thirdBodyUpperXCoord + bodyRadius +bodyRadius/4,thirdBodyUpperYCoord + 2*bodyRadius + bodyRadius/4);

	//make two antennae
	Line2D.Double antennae_1 = new Line2D.Double (x+r,y,x+r-bodyRadius/2,y-bodyRadius/2);
	Line2D.Double antennae_2 = new Line2D.Double (x+r,y,x+r+bodyRadius/2,y-bodyRadius/2);

        // put the whole ant together
       
        GeneralPath wholeAnt = this.get();
        wholeAnt.append(antHead, false);
        wholeAnt.append(antFirstBody, false);
        wholeAnt.append(antSecondBody, false);
	wholeAnt.append(antThirdBody, false);
	wholeAnt.append(leg_1, false);
	wholeAnt.append(leg_2, false);
	wholeAnt.append(leg_3, false);
	wholeAnt.append(leg_4, false);
	wholeAnt.append(leg_5, false);
	wholeAnt.append(leg_6, false);
	wholeAnt.append(antennae_1, false);
	wholeAnt.append(antennae_2, false);

        
    }

}
